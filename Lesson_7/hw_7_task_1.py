# Задание № 1
# Отсортируйте по убыванию методом пузырька одномерный целочисленный массив, заданный случайными числами
# на промежутке [-100; 100). Выведите на экран исходный и отсортированный массивы.
# Примечания:
# ● алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных,
# ● постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка пузырьком.
#   Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут.

import random

# Вариант из лекции
def bubble(array):
    print(array)
    n=1
    while n < len(array):
        for i in range(len(array)-1):
            if array[i] > array[i+1]:
                array[i], array[i+1] = array[i+1], array[i]
        n += 1
    print(array)

# Улучшеная версия. Идея в следующем, как только массив отсортировался, то есть за полный проход по все его элементам ни разу
# не провалились в оператор if, где меняются элементы местами, выходим из цикла возвращаем отсортированый массив.
# Эксперементы показали на массиве из 30 элементов, заданый на промежутке от [-100; 100) число проходов
# равно 23 против 30 при стандартном методе.
def bubble_mod(array):
    print(array)
    n = 1
    while n:
        n = 0
        for i in range(len(array)-1):
            if array[i] > array[i+1]:
                array[i], array[i+1] = array[i+1], array[i]
                n = 1
    print(array)


arr_1 = [random.randint(-100,99) for _ in range(30)]
arr_2 = [random.randint(-100,99) for _ in range(30)]
bubble(arr_1)
bubble_mod(arr_2)